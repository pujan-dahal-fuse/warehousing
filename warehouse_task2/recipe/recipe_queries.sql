--------------- CREATE WAREHOUSE, DATABASE AND SCHEMA -------------------
CREATE WAREHOUSE RECIPE_WAREHOUSE;
CREATE DATABASE RECIPE_DB;
CREATE SCHEMA USA;
CREATE STAGE RAW_STAGE;

---------------- LOAD JSON DATA INTO STAGE FROM DEVICE USING SNOWSQL CLIENT ------------------
-- PUT file://<path_to_file>/filename.json @RAW_STAGE;

---------------- SEE THE CONTENTS OF STAGE ----------------
LIST @RAW_STAGE;

---------------- CREATE TABLE TICKETS_JSON_T ----------------
CREATE OR REPLACE TABLE RECIPE_JSON_T
(
  RAW_DATA VARIANT
);


-------------- INSERT DATA INTO TABLE ---------------
COPY INTO RECIPE_JSON_T
FROM @RAW_STAGE/recipe.json.gz
FILE_FORMAT = (TYPE = JSON)
ON_ERROR = 'CONTINUE';


------------- SEE CONTENTS OF TABLE ---------------
SELECT * FROM RECIPE_JSON_T;


------------- SEE CONTENTS OF FIRST ARRAY OBJECT --------------
SELECT
RAW_DATA[0]
FROM RECIPE_JSON_T;

------------- INPUT JSON IS IN THE FORM OF ARRAY, SO FOR EACH OBJECT IN ARRAY CREATE A ROW IN TABLE BY LATERAL FLATTEN ---------------------
-------------- FOR EACH DISH, EXTRACT IT'S STATE, TITLE AND RATING. ALSO ORDER BY STATE --------------
SELECT
VALUE:state::VARCHAR AS STATE,
VALUE:basic_info:title::VARCHAR AS TITLE,
VALUE:basic_info:rating::FLOAT AS RATING
FROM RECIPE_JSON_T,
LATERAL FLATTEN(INPUT => RAW_DATA);

-------------- OBTAIN ALL IMPORTANT INFORMATION BY USING RECURSIVE FLATTENING AND CREATE TABLE ALL_RECIPE ----------------
CREATE OR REPLACE TABLE ALL_RECIPE
AS
SELECT
VALUE:basic_info:title::VARCHAR AS TITLE,
VALUE:basic_info:category::VARCHAR AS CATEGORY,
VALUE:basic_info:recipe_by::VARCHAR AS RECIPE_BY,
VALUE:basic_info:rating::FLOAT AS RATING,
COALESCE(VALUE:prep_data:"cook_time:"::VARCHAR, '0 mins') AS COOK_TIME,
COALESCE(VALUE:prep_data:"additional_time:"::VARCHAR, '0 mins') AS ADDITIONAL_TIME,
COALESCE(VALUE:prep_data:"servings:"::INT, 0) AS SERVINGS,
COALESCE(VALUE:prep_data:"total_time:"::VARCHAR, '0 mins') AS TOTAL_TIME,
COALESCE(VALUE:nutritions:calories::INT, 0) AS CALORIES,
COALESCE(VALUE:nutritions:carbs::VARCHAR, '0g') AS CARBS,
COALESCE(VALUE:nutritions:fat::VARCHAR, '0g') AS FAT,
COALESCE(VALUE:nutritions:protein::VARCHAR, '0g') AS PROTEIN,
VALUE:state::VARCHAR AS STATE
FROM RECIPE_JSON_T,
LATERAL FLATTEN(INPUT => RAW_DATA, RECURSIVE => TRUE)
WHERE TITLE IS NOT NULL;

-------------- SEE THE CONTENTS OF TABLE ALL RECIPE -----------------
SELECT * FROM ALL_RECIPE;