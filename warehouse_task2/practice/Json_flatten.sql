-- CREATE TABLE WITH VARIANT COLUMN
CREATE OR REPLACE TABLE
JSON_SAMPLE_T 
(RAW_DATA VARIANT);

-- LOAD RAW DATA INTO UNFORMATTED TABLE
COPY INTO JSON_SAMPLE_T
FROM @SECOND_STAGE/json_sample_data.json.gz
FILE_FORMAT = (TYPE = JSON);

-- CHECK LOADED DATA
SELECT * FROM JSON_SAMPLE_T;

-- QUERY TABLE
SELECT 
RAW_DATA:quiz QUIZ_RAW_DATA
FROM JSON_SAMPLE_T;

-- QUERY NESTED DATA
SELECT 
RAW_DATA:quiz:maths MATHS_RAW_DATA
FROM JSON_SAMPLE_T;

-- GET REQUIRED VALUE AND CAST AS REQUIRED
SELECT 
RAW_DATA:quiz:maths:q1:answer::STRING VAL
FROM JSON_SAMPLE_T;

-- GET MATHS QUESTIONS
SELECT
VALUE:question::VARCHAR QUESTIONS_MATHS
FROM JSON_SAMPLE_T,
LATERAL FLATTEN(INPUT => RAW_DATA:quiz:maths);

-- GET MATHS QUESTIONS & OPTIONS
SELECT
VALUE:question::VARCHAR QUESTIONS_MATHS,
VALUE:options OPTIONS
FROM JSON_SAMPLE_T,
LATERAL FLATTEN(INPUT => RAW_DATA:quiz:maths);

-- GET MATHS QUESTIONS & SEPERATED OPTIONS
SELECT
VALUE:question::VARCHAR QUESTIONS_MATHS,
VALUE:options[0]::STRING OPTIONS_1,
VALUE:options[1]::STRING OPTIONS_2,
VALUE:options[2]::STRING OPTIONS_3,
VALUE:options[3]::STRING OPTIONS_4,
VALUE:answer::STRING ANSWER
FROM JSON_SAMPLE_T,
LATERAL FLATTEN(INPUT => RAW_DATA:quiz:maths);

-- OUTPUT OF FLATTEN => SEQ |  KEY | PATH | INDEX | VALUE | THIS 
SELECT *
FROM JSON_SAMPLE_T,
LATERAL FLATTEN(INPUT => RAW_DATA:quiz);

-- RECURSIVE FLATTEN
SELECT *
FROM JSON_SAMPLE_T,
LATERAL FLATTEN(INPUT => RAW_DATA:quiz, RECURSIVE => TRUE);

-- GET QUESTIONS ONLY, METHOD 1
SELECT *
FROM JSON_SAMPLE_T,
LATERAL FLATTEN(INPUT => RAW_DATA:quiz, RECURSIVE => TRUE);

-- GET QUESTIONS ONLY, METHOD 2
SELECT
VALUE:question::VARCHAR QUESTIONS,
VALUE:options
FROM JSON_SAMPLE_T,
LATERAL FLATTEN(INPUT => RAW_DATA:quiz,recursive => true)
WHERE QUESTIONS IS NOT NULL
;

-- GET QUESTIONS ONLY, METHOD 2
SELECT
VALUE:question::VARCHAR QUESTIONS,
VALUE:options[0]::STRING OPTION_1,
VALUE:options[1]::STRING OPTION_2,
VALUE:options[2]::STRING OPTION_3,
VALUE:options[3]::STRING OPTION_4,
VALUE:answer::STRING ANSWER
FROM JSON_SAMPLE_T,
LATERAL FLATTEN(INPUT => RAW_DATA:quiz,recursive => true)
WHERE QUESTIONS IS NOT NULL
;