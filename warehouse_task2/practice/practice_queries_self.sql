----------------- CREATE WAREHOUSE, DATABASE AND SCHEMA ------------------
CREATE WAREHOUSE PRACTICE_WAREHOUSE;
CREATE DATABASE PRACTICE_DB;
CREATE SCHEMA PRACTICE_SCHEMA;
CREATE STAGE RAW_STAGE;


----------------- INSERT FILE INTO STAGE USING SNOWSQL CLIENT ------------------
-- put file://<path_to_file>/file.json @RAW_STAGE;

----------------- CHECK THE CONTENTS OF THE STAGE ----------------
LIST @RAW_STAGE;

----------------- CREATE TABLE FOR RAW JSON DATA ----------------
CREATE OR REPLACE TABLE JSON_RAW_T
(
  RAW_DATA VARIANT
);

----------------- COPY THE CONTENTS OF SAMPLE JSON DATA INTO TABLE -----------------
COPY INTO JSON_RAW_T
FROM @RAW_STAGE/sample.json.gz
FILE_FORMAT = (TYPE = JSON)
ON_ERROR = 'CONTINUE';

----------------- SEE CONTENTS OF TABLE --------------------
SELECT * FROM JSON_RAW_T;

----------------- OBTAIN THE CONTENTS OF QUIZ KEY INSIDE JSON ----------------
SELECT
RAW_DATA:quiz QUIZ
FROM JSON_RAW_T;

----------------- QUERY DEEPLY NESTED DATA EG. Q1 QUESTION OF MATH ----------------
SELECT
RAW_DATA:quiz:maths:q1:question::VARCHAR as QUESTION
FROM JSON_RAW_T;

---------------- USING LATERAL FLATTEN TO OBTAIN THE OBJECTS ----------------
SELECT
VALUE
FROM JSON_RAW_T,
LATERAL FLATTEN(INPUT => RAW_DATA:quiz);

--------------- GET MATHS QUESTIONS USING LATERAL FLATTEN ------------------
SELECT
VALUE:question::VARCHAR as QUESTION
FROM JSON_RAW_T,
LATERAL FLATTEN(INPUT => RAW_DATA:quiz:maths);

--------------- SELECT QUESTION, OPTION AND ANSWERS FOR MATHS --------------------
SELECT
VALUE:question::VARCHAR as QUESTION,
VALUE:options as OPTIONS,
VALUE:answer::VARCHAR as ANSWER
FROM JSON_RAW_T,
LATERAL FLATTEN(INPUT => RAW_DATA:quiz:maths);

-- FURTHER
SELECT
VALUE:question::VARCHAR as QUESTION,
VALUE:options[0]::VARCHAR as OPTION_1,
VALUE:options[1]::VARCHAR as OPTION_2,
VALUE:options[2]::VARCHAR as OPTION_3,
VALUE:options[3]::VARCHAR as OPTION_4,
VALUE:answer::VARCHAR as ANSWER
FROM JSON_RAW_T,
LATERAL FLATTEN(INPUT => RAW_DATA:quiz:maths);


---------------- SELECT ALL QUESTIONS, OPTIONS AND ANSWER FROM JSON USING RECURSIVE FLATTENING AND CREATE A TABLE --------------
CREATE OR REPLACE TABLE QUIZ_QUESTIONS
AS
SELECT
VALUE:question::VARCHAR QUESTION,
VALUE:options[0]::VARCHAR OPTION_1,
VALUE:options[1]::VARCHAR OPTION_2,
VALUE:options[2]::VARCHAR OPTION_3,
VALUE:options[3]::VARCHAR OPTION_4,
VALUE:answer::VARCHAR ANSWER
FROM JSON_RAW_T,
LATERAL FLATTEN(INPUT => RAW_DATA:quiz, RECURSIVE => TRUE)
WHERE QUESTION IS NOT NULL;

----------------- SEE THE CONTENTS OF NEWLY FORMED TABLE --------------------
SELECT * FROM QUIZ_QUESTIONS;
